{"version":3,"sources":["dist/hyperappFx.js"],"names":["global","factory","exports","module","define","amd","self","hyperappFx","this","dispatchEffect","dispatch","props","action","consoleEffect","_","args","console","log","apply","generateRandom","values","map","min","max","int","bool","randomValue","Math","random","floor","randomEffect","assign","source","assignments","i","result","makeRemoveListener","attachTo","eventName","handler","bind","addEventListener","removeEventListener","makeDispatchTime","asDate","Date","performance","now","webSocketConnections","getOpenWebSocket","connection","url","socket","WebSocket","protocols","listeners","httpEffect","fetch","options","then","response","ok","catch","error","mergeEffect","state","debounceTimeouts","debounceEffect","timeout","find","nextTimeout","clearTimeout","push","setTimeout","wait","throttleLocks","throttleEffect","lock","nextLock","rate","storageArea","area","window","localStorage","writeToStorageEffect","value","converter","setItem","key","readFromStorageEffect","getItem","dispatchProps","prop","removeFromStorageEffect","removeItem","historyPushEffect","title","document","location","href","history","pushState","historyReplaceEffect","replaceState","validCookieNameChars","validCookieValueChars","nameEncoder","toString","split","c","indexOf","encodeURIComponent","join","readCookieEffect","cookie","substr","name","decoder","length","writeCookieEffect","encoder","attributes","ttl","expires","getTime","path","domain","toUTCString","attrs","Object","keys","k","writeCookie","WriteCookie","json","JSON","stringify","v","nowEffect","delayEffect","webSocketSendEffect","sendMessage","send","data","readyState","CONNECTING","getCurrentPositionEffect","navigator","geolocation","getCurrentPosition","intervalEffect","dispatchTime","everyInterval","setInterval","every","clearInterval","animationEffect","cancelId","requestAnimationFrame","frame","timestamp","cancelAnimationFrame","keyboardEffect","removeListenerForEvent","removeDown","downs","removeUp","ups","removePress","presses","webSocketListenEffect","removeError","removeOpen","removeClose","removeListen","open","close","filter","listener","closeWebSocket","historyPopEffect","watchPositionEffect","watchPosition","clearWatch","Animation","Console","arguments","Debounce","Delay","DeleteCookie","Dispatch","GetCurrentPosition","HistoryPop","HistoryPush","HistoryReplace","Http","Interval","Keyboard","Merge","Now","Random","ReadCookie","parse","decodeURIComponent","ReadFromStorage","RemoveFromStorage","Throttle","WatchPosition","WebSocketListen","WebSocketSend","WriteToStorage"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.hyperappFx = {}));\n}(this, function (exports) { 'use strict';\n\n  function dispatchEffect(dispatch, props) {\n    dispatch(props.action);\n  }\n\n  /**\n   * Describes an effect that will dispatch whatever action is passed to it. Useful for batching actions and FX together.\n   *\n   * @memberof module:fx\n   * @param {*} action - an action to dispatch\n   * @example\n   * import { Dispatch } from \"hyperapp-fx\"\n   *\n   * const BatchedFxAndActions = state => [\n   *   state,\n   *   SomeFx,\n   *   Dispatch(SomeAction)\n   * ]\n   */\n  function Dispatch(action) {\n    return [dispatchEffect, { action: action }]\n  }\n\n  function consoleEffect(_, args) {\n    // eslint-disable-next-line no-console\n    console.log.apply(null, args);\n  }\n\n  /**\n   * Describes an effect that will call [`console.log`](https://developer.mozilla.org/en-US/docs/Web/API/Console/log) with arguments. Useful for development and debugging. Not recommended for production.\n   *\n   * @memberof module:fx\n   * @param {...*} args - arguments to log to the console\n   * @example\n   * import { Console } from \"hyperapp-fx\"\n   *\n   * const ConsoleAction = state => [\n   *   state,\n   *   Console(\n   *     \"string arg\",\n   *     { object: \"arg\" },\n   *     [\"list\", \"of\", \"args\"],\n   *     someOtherArg\n   *   )\n   * ]\n   */\n  function Console() {\n    return [consoleEffect, arguments]\n  }\n\n  function generateRandom(props) {\n    if (props.values) {\n      return props.values.map(generateRandom)\n    }\n    var min = props.min || 0;\n    var max = props.max || 1;\n    if (props.int) max++;\n    if (props.bool) {\n      min = 0;\n      max = 2;\n    }\n    var randomValue = Math.random() * (max - min) + min;\n    if (props.int || props.bool) {\n      randomValue = Math.floor(randomValue);\n    }\n    if (props.bool) {\n      randomValue = !!randomValue;\n    }\n    return randomValue\n  }\n\n  function randomEffect(dispatch, props) {\n    var randomValue = generateRandom(props);\n    dispatch(props.action, randomValue);\n  }\n\n  /**\n   * Describes an effect that will call an action with one or more randomly generated value(s).\n   * If provided the range for [random numeric values](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random) will be `[min, max)` or else the default range is `[0, 1)`. Also `bool`eans, `int`egers, and arrays of `values` are supported. The random value will be provided as the action `data`.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {*} props.action - action to call with the random number result\n   * @param {number} props.min - minimum random number to generate\n   * @param {number} props.max - maximum random number to generate\n   * @param {boolean} props.int - round number to nearest integer\n   * @param {boolean} props.bool - generate a boolean instead of a number (ignores numeric options)\n   * @param {array(object)} props.values - generate an array of values (ignores other options, each object accepts same props as the root)\n   * @example\n   * import { Random } from \"hyperapp-fx\"\n   *\n   * const RollDie = state => [\n   *   state,\n   *   Random({\n   *     min: 1,\n   *     max: 6,\n   *     int: true,\n   *     action: (_, roll) => {\n   *       // roll will be an int from 1-6\n   *\n   *       // return new state using roll\n   *     }\n   *   })\n   * ]\n   */\n  function Random(props) {\n    return [randomEffect, props]\n  }\n\n  function assign(source, assignments) {\n    var result = {},\n      i;\n    for (i in source) result[i] = source[i];\n    for (i in assignments) result[i] = assignments[i];\n    return result\n  }\n\n  function makeRemoveListener(attachTo, dispatch, action, eventName) {\n    var handler = dispatch.bind(null, action);\n    attachTo.addEventListener(eventName, handler);\n    return function() {\n      attachTo.removeEventListener(eventName, handler);\n    }\n  }\n\n  function makeDispatchTime(dispatch, props) {\n    return function() {\n      dispatch(props.action, props.asDate ? new Date() : performance.now());\n    }\n  }\n\n  var webSocketConnections = {};\n\n  function getOpenWebSocket(props) {\n    var connection = webSocketConnections[props.url];\n    if (!connection) {\n      connection = {\n        socket: new WebSocket(props.url, props.protocols),\n        listeners: []\n      };\n      webSocketConnections[props.url] = connection;\n    }\n    return connection\n  }\n\n  function closeWebSocket(props) {\n    var connection = getOpenWebSocket(props);\n    // FIXME: handle close on opening\n    connection.socket.close();\n    delete webSocketConnections[props.url];\n  }\n\n  function httpEffect(dispatch, props) {\n    fetch(props.url, props.options)\n      .then(function(response) {\n        if (!response.ok) {\n          throw response\n        }\n        return response\n      })\n      .then(function(response) {\n        return response[props.response]()\n      })\n      .then(function(result) {\n        dispatch(props.action, result);\n      })\n      .catch(function(error) {\n        dispatch(props.error, error);\n      });\n  }\n\n  /**\n   * Describes an effect that will send an HTTP request using [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Window/fetch) and then call an action with the response. If you are using a browser from the Proterozoic Eon like Internet Explorer you will want one of the [available](https://github.com/developit/unfetch) `fetch` [polyfills](https://github.com/github/fetch).\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.url - URL for sending HTTP request\n   * @param {object} props.options - same [options as `fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Window/fetch#Parameters)\n   * @param {string} props.response - Specify which method to use on the response body, defaults to `\"json\"`, other [supported methods](https://developer.mozilla.org/en-US/docs/Web/API/Response#Methods) include `\"text\"`\n   * @param {*} props.action - Action to call with the results of a successful HTTP response\n   * @param {*} props.error - Action to call if there is a problem making the request or a not-ok HTTP response, defaults to the same action defined for success\n   * @example\n   * import { Http } from \"hyperapp-fx\"\n   *\n   * const Login = state => [\n   *   state,\n   *   Http({\n   *     url: \"/login\",\n   *     options: {\n   *       method: \"POST\",\n   *       body: form\n   *     },\n   *     action(state, loginResponse) {\n   *       // loginResponse will have the JSON-decoded response from POSTing to /login\n   *     },\n   *     error(state, error) {\n   *       // please handle your errors...\n   *     }\n   *   })\n   * ]\n   */\n  function Http(props) {\n    return [\n      httpEffect,\n      assign(\n        {\n          options: {},\n          response: \"json\",\n          error: props.action\n        },\n        props\n      )\n    ]\n  }\n\n  function mergeEffect(dispatch, props) {\n    dispatch(function(state) {\n      return assign(state, props.action(state))\n    });\n  }\n\n  /**\n   * Describes an effect that will shallow-merge the results from actions that return partial state.\n   *\n   * @memberof module:fx\n   * @param {function(object): object} action - an action function that takes state and returns a partial new state which will be shallow-merged with the previous state\n   * @example\n   * import { Merge } from \"hyperapp-fx\"\n   *\n   * const MergingAction = state => [\n   *   state,\n   *   Merge(ActionReturningPartialState)\n   * ]\n   */\n  function Merge(action) {\n    return [mergeEffect, { action: action }]\n  }\n\n  var debounceTimeouts = [];\n  function debounceEffect(dispatch, props) {\n    var timeout = debounceTimeouts.find(function(nextTimeout) {\n      return nextTimeout[0] === props.action\n    });\n    if (!timeout) {\n      timeout = [props.action];\n      debounceTimeouts.push(timeout);\n    } else {\n      clearTimeout(timeout[1]);\n    }\n\n    timeout[1] = setTimeout(function() {\n      dispatch(props.action);\n    }, props.wait);\n  }\n\n  /**\n   * Describes an effect that will call an action after waiting for a delay to pass. The delay will be reset each time the action is called.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {number} props.wait - delay to wait before calling the action\n   * @param {*} props.action - action to debounce\n   * @example\n   * import { Debounce } from \"hyperapp-fx\"\n   *\n   * const OriginalAction = state => {\n   *   // This action will run after waiting for 500ms since the last call\n   * }\n   *\n   * const DebouncedAction = state => [\n   *   state,\n   *   Debounce({\n   *     wait: 500,\n   *     action: OriginalAction\n   *   })\n   * ]\n   */\n  function Debounce(props) {\n    return [debounceEffect, props]\n  }\n\n  var throttleLocks = [];\n  function throttleEffect(dispatch, props) {\n    var lock = throttleLocks.find(function(nextLock) {\n      return nextLock[0] === props.action\n    });\n    if (!lock) {\n      lock = [props.action];\n      throttleLocks.push(lock);\n    }\n\n    if (!lock[1]) {\n      dispatch(props.action);\n      lock[1] = true;\n      setTimeout(function() {\n        lock[1] = false;\n      }, props.rate);\n    }\n  }\n\n  /**\n   * Describes an effect that will call an action at a maximum rate. Where `rate` is one call per `rate` milliseconds.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {number} props.rate - minimum time between action calls\n   * @param {*} props.action - action to throttle\n   * @example\n   * import { Throttle } from \"hyperapp-fx\"\n   *\n   * const OriginalAction = state => {\n   *   // This action will only run once per 500ms\n   * }\n   *\n   * const ThrottledAction = state => [\n   *   state,\n   *   Throttle({\n   *     rate: 500,\n   *     action: OriginalAction\n   *   })\n   * ]\n   */\n  function Throttle(props) {\n    return [throttleEffect, props]\n  }\n\n  function storageArea(area) {\n    return window[area + \"Storage\"] || localStorage\n  }\n\n  function writeToStorageEffect(_, props) {\n    var value = props.converter(props.value);\n    storageArea(props.area).setItem(props.key, value);\n  }\n\n  function readFromStorageEffect(dispatch, props) {\n    try {\n      var value = props.converter(storageArea(props.area).getItem(props.key));\n      var dispatchProps = assign({}, props.props || {});\n      dispatchProps[props.prop || \"value\"] = value;\n      dispatch(props.action, dispatchProps);\n    } catch (error) {\n      dispatch(props.error);\n    }\n  }\n\n  function removeFromStorageEffect(_, props) {\n    storageArea(props.area).removeItem(props.key);\n  }\n\n  /**\n   * Describes an effect that will write a key value pair to Storage. By default the item is written to [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage), to write to [`sessionStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage) set the `storage` prop to `session`. Values are saved in JSON, unless a custom converter is provided.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.key - Specify key to use\n   * @param {*} props.value - Value to write to storage\n   * @param {string} props.storage - Storage area to write to, can be either \"session\" or \"local\"\n   * @param {function} props.converter - Use a custom converter function to encode the value of the item\n   * @example\n   * import { WriteToStorage } from \"hyperapp-fx\"\n   *\n   * const SavePreferences = (state, preferences) => [\n   *   state,\n   *   WriteToStorage({\n   *     key: \"preferences\",\n   *     value: preferences,\n   *     storage: \"local\"\n   *   })\n   * ]\n   *\n   */\n\n  function WriteToStorage(props) {\n    return [\n      writeToStorageEffect,\n      assign(\n        {\n          converter: props.converter || JSON.stringify\n        },\n        props\n      )\n    ]\n  }\n\n  /**\n   * Describes an effect that will read the value of a key from Storage. By default the item is read from [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage), to read from [`sessionStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage) set the `storage` prop to `session`. Values are converted from JSON, unless a custom converter is provided.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.key - Specify key to use with which to write to storage\n   * @param {*} props.action - Action to call with the value of the item in storage\n   * @param {string} props.storage - Storage area to read from, can be either \"session\" or \"local\"\n   * @param {string} props.prop - Property of the action where the value is received, defaults to \"value\"\n   * @param {function} props.converter - Use a custom converter function to decode the value of the item\n   * @example\n   * import { ReadFromStorage } from \"hyperapp-fx\"\n   *\n   * const LoadPreferences = state => [\n   *  state,\n   *  ReadFromStorage({\n   *    key: \"preferences\",\n   *    action: function (state, { value }) {\n   *      // this action will receive the value of the item in storage\n   *    }\n   *  })\n   * ]\n   *\n   */\n\n  function ReadFromStorage(props) {\n    return [\n      readFromStorageEffect,\n      assign(\n        {\n          converter: props.converter || JSON.parse,\n          error: props.error\n        },\n        props\n      )\n    ]\n  }\n\n  /**\n   * Describes an effect that will remove a key value pair Storage. By default the item is deleted from [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage), to delete from [`sessionStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage) set the `storage` prop to `session`.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.key - Specify key to delete from storage\n   * @param {string} props.storage - Storage area to delete from, can be either \"session\" or \"local\"\n   * @example\n   * import { RemoveFromStorage } from \"hyperapp-fx\"\n   *\n   * const ClearPreferences = state => [\n   *  state,\n   *  RemoveFromStorage({\n   *    key: \"preferences\",\n   *    storage: \"local\"\n   *  })\n   * ]\n   *\n   */\n\n  function RemoveFromStorage(props) {\n    return [removeFromStorageEffect, props]\n  }\n\n  function historyPushEffect(dispatch, props) {\n    var title = props.title || document.title;\n    var url = props.url || location.href;\n\n    history.pushState(props.state, title, url);\n  }\n\n  function historyReplaceEffect(dispatch, props) {\n    var title = props.title || document.title;\n    var url = props.url || location.href;\n\n    history.replaceState(props.state, title, url);\n  }\n\n  /**\n   * Describes an effect that will add an entry to the browsers navigation [`history`](https://developer.mozilla.org/en-US/docs/Web/API/History_API#Adding_and_modifying_history_entries) with the supplied location and state.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {*} props.state - data to add to browser history\n   * @param {string} props.url - url to add to browser history\n   * @param {string} props.title - title to set document to\n   * @example\n   * import { HistoryPush } from \"hyperapp-fx\"\n   *\n   * export const UpdateHistory = state => [\n   *   state,\n   *   HistoryPush({\n   *     state,\n   *     title: document.title,\n   *     url: '#foo'\n   *   })\n   * ]\n   */\n\n  function HistoryPush(props) {\n    return [historyPushEffect, props]\n  }\n\n  /**\n   * Describes an effect that will replace the browsers current [`history`](https://developer.mozilla.org/en-US/docs/Web/API/History_API#Adding_and_modifying_history_entries) navigation entry with the supplied location and state.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {*} props.state - data to add to browser history\n   * @param {string} props.url - url to add to browser history\n   * @param {string} props.title - title to set document to\n   * @example\n   * import { HistoryReplace } from \"hyperapp-fx\"\n   *\n   * export const InitialiseHistory = state => [\n   *   state,\n   *   HistoryReplace({\n   *     state,\n   *     title: document.title,\n   *     url: '#foo'\n   *   })\n   * ]\n   */\n\n  function HistoryReplace(props) {\n    return [historyReplaceEffect, props]\n  }\n\n  var validCookieNameChars =\n    \"abdefghijklmnqrstuvxyzABDEFGHIJKLMNQRSTUVXYZ0123456789!#$%&'*+-.^_`|~\";\n  var validCookieValueChars = validCookieNameChars + \"()/:<>?@[]{}\";\n\n  function nameEncoder(value) {\n    return value\n      .toString()\n      .split(\"\")\n      .map(function(c) {\n        return validCookieNameChars.indexOf(c) > -1 ? c : encodeURIComponent(c)\n      })\n      .join(\"\")\n  }\n\n  function valueEncoder(value) {\n    return value\n      .toString()\n      .split(\"\")\n      .map(function(c) {\n        return validCookieValueChars.indexOf(c) > -1 ? c : encodeURIComponent(c)\n      })\n      .join(\"\")\n  }\n\n  function writeCookie(name, value, attributes) {\n    var attrs = Object.keys(attributes)\n      .map(function(k) {\n        return k + \"=\" + attributes[k]\n      })\n      .join(\";\");\n    document.cookie = name + \"=\" + value + (attrs ? \";\" + attrs : \"\");\n  }\n\n  function readCookieEffect(dispatch, props) {\n    var cookies = document.cookie.split(\"; \");\n    var cookie = cookies.find(function(c) {\n      return c.substr(0, c.indexOf(\"=\")) === props.nameEncoder(props.name)\n    });\n    if (cookie) {\n      var dispatchProps = assign({}, props.props || {});\n      dispatchProps[props.prop || \"value\"] = props.converter(\n        props.decoder(cookie.substr(props.nameEncoder(props.name).length + 1))\n      );\n      dispatch(props.action, dispatchProps);\n    }\n  }\n\n  function writeCookieEffect(dispatch, props) {\n    var name = (props.nameEncoder || nameEncoder)(props.name);\n    var value = (props.encoder || valueEncoder)(props.converter(props.value));\n    var attributes = {};\n    if (props.ttl)\n      props.expires = new Date(new Date().getTime() + props.ttl * 1000);\n    if (props.path) attributes.path = props.path;\n    if (props.domain) attributes.domain = props.domain;\n    if (props.expires) attributes.expires = props.expires.toUTCString();\n\n    writeCookie(name, value, attributes);\n  }\n\n  /**\n   * Describes an effect that will read a cookie and then call an action with its value. If no `prop` is specified the action will receive the value of the cookie in the `value` prop. Extra properties may be added using by specifying `props`. If `json` is set to `true` the value will be converted from JSON.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.name - Name of the cookie\n   * @param {string} props.action - Action to call when cookie is read\n   * @param {string} props.prop - Name of prop to which the cookie value is passed\n   * @param {object} props.props - Props to pass to action\n   * @param {boolean} props.json - Indicates whether cookie value should be converted from JSON\n   * @param {function} props.converter - Function used to convert cookie value\n   * @param {function} props.decoder - Function used to decode cookie value\n   * @example\n   * import { ReadCookie } from \"hyperapp-fx\"\n   *\n   * const LoadPreferences = state => [\n   *   state,\n   *   ReadCookie({\n   *     name: \"preferences\",\n   *     action: function (state, { value }) {\n   *       // this action will receive the cookie value\n   *     },\n   *     json: true\n   *   })\n   * ]\n   */\n\n  function ReadCookie(props) {\n    return [\n      readCookieEffect,\n      assign(\n        {\n          nameEncoder: nameEncoder,\n          converter:\n            props.converter || props.json\n              ? JSON.parse\n              : function(v) {\n                  return v\n                },\n          decoder: props.decoder || decodeURIComponent\n        },\n        props\n      )\n    ]\n  }\n\n  /**\n   * Describes an effect that will write a cookie.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.name - Name of the cookie\n   * @param {string} props.value - Value to save in cookie\n   * @param {string} props.domain - Domain of the cookie\n   * @param {string} props.path - Path of the cookie\n   * @param {date} props.expires - Expiry date of the cookie\n   * @param {number} props.ttl - Time to live of the cookie in seconds, this property has precedence over the `expires` property\n   * @param {boolean} props.json - Indicates whether the cookie value should be converted to JSON\n   * @param {function} props.nameEncoder - Function used to encode the cookie name\n   * @param {function} props.converter - Function used to convert cookie value\n   * @param {function} props.encoder - Function used to encode cookie value\n   * @example\n   * import { WriteCookie } from \"hyperapp-fx\"\n   *\n   * const SavePreferences = state => [\n   *   state,\n   *   WriteCookie({\n   *     name: \"preferences\",\n   *     value: state.preferences\n   *     json: true\n   *   })\n   * ]\n   */\n\n  function WriteCookie(props) {\n    return [\n      writeCookieEffect,\n      assign(\n        {\n          converter:\n            props.converter || props.json\n              ? JSON.stringify\n              : function(v) {\n                  return v\n                }\n        },\n        props\n      )\n    ]\n  }\n\n  /**\n   * Describes an effect that will delete a cookie. \n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.name - Name of the cookie to delete\n\n   * @example\n   * import { DeleteCookie } from \"hyperapp-fx\"\n   * \n   *  const ClearPreferences = state => [\n   *   state,\n   *   DeleteCookie({\n   *     name: \"preferences\"\n   *   })\n   * ]\n   */\n\n  function DeleteCookie(props) {\n    return WriteCookie(assign(props, { ttl: -1, value: \"\" }))\n  }\n\n  function nowEffect(dispatch, props) {\n    makeDispatchTime(dispatch, props)();\n  }\n\n  function delayEffect(dispatch, props) {\n    setTimeout(makeDispatchTime(dispatch, props), props.wait);\n  }\n\n  /**\n   * Describes an effect that provides the current timestamp (using [`performance.now`](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now)) or current date (using [`new Date()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#Syntax)). The timestamp/date will be provided as the action `data`.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {boolean} props.asDate - use a Date object instead of a timestamp\n   * @param {*} props.action - action to call with the timestamp/date\n   * @example\n   * import { Now } from \"hyperapp-fx\"\n   *\n   * const NowAction = state => [\n   *   state,\n   *   Now({\n   *     asDate: true,\n   *     action(currentDate) {\n   *     }\n   *   })\n   * ]\n   */\n  function Now(props) {\n    return [nowEffect, props]\n  }\n\n  /**\n   * Describes an effect that provides a timestamp (using [`performance.now`](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now)) or date (using [`new Date()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#Syntax)) after a delay. The timestamp/date will be provided as the action `data`.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {number} props.wait - delay to wait before calling action\n   * @param {boolean} props.asDate - use a Date object instead of a timestamp\n   * @param {*} props.action - action to call with the timestamp/date\n   * @example\n   * import { Delay } from \"hyperapp-fx\"\n   *\n   * const DelayedAction = state => [\n   *   state,\n   *   Delay({\n   *     wait: 500,\n   *     action() {\n   *       // This action will run after a 500ms delay\n   *     }\n   *   })\n   * ]\n   */\n  function Delay(props) {\n    return [delayEffect, props]\n  }\n\n  function webSocketSendEffect(dispatch, props) {\n    var connection = getOpenWebSocket(props);\n    function sendMessage() {\n      connection.socket.send(props.data);\n      connection.socket.removeEventListener(\"open\", sendMessage);\n    }\n    if (connection.socket.readyState === WebSocket.CONNECTING) {\n      connection.socket.addEventListener(\"open\", sendMessage);\n    } else {\n      sendMessage();\n    }\n  }\n\n  /**\n   * Describes an effect that will open a [`WebSocket`](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/WebSocket) connection for a given URL (and optional protocols) and send a message reusing existing connections.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {string} props.url - The URL to which to connect; this should be the URL to which the WebSocket server will respond\n   * @param {string | string[]} props.protocols - Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified `protocol`). If you don't specify a protocol string, an empty string is assumed.\n   * @param {*} props.data - data to send once connected\n   * @example\n   * import { WebSocketSend } from \"hyperapp-fx\"\n   *\n   *  const SendAction = state => [\n   *   state,\n   *   WebSocketSend({\n   *     url: \"wss://example.com\",\n   *     data: JSON.stringify({\n   *       sendThisData: \"on connecting\"\n   *     })\n   *   })\n   * ]\n   */\n  function WebSocketSend(props) {\n    return [webSocketSendEffect, props]\n  }\n\n  function getCurrentPositionEffect(dispatch, props) {\n    navigator.geolocation.getCurrentPosition(\n      function(result) {\n        return dispatch(props.action, result)\n      },\n      function(error) {\n        return dispatch(props.error, error)\n      },\n      props.options\n    );\n  }\n\n  /**\n   * Describes an effect that will get the current user's location using the [Geolocation API](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API) and then call an action with the coordinates.\n   *\n   * @memberof module:fx\n   * @param {object} props\n   * @param {*} props.action - Action to call with the position\n   * @param {*} props.error - Action to call if there is a problem getting the position\n   * @param {object} props.options - An optional [`PositionOptions`](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions) object\n   * @example\n   * import { GetCurrentPosition } from \"hyperapp-fx\"\n   *\n   * const WhereAmI = state => [\n   *   state,\n   *   GetCurrentPosition({\n   *     action(state, position) {\n   *       console.log(position);\n   *     },\n   *     error(state, error) {\n   *       // please handle your errors...\n   *     }\n   *   })\n   * ]\n   */\n  function GetCurrentPosition(props) {\n    return [getCurrentPositionEffect, props]\n  }\n\n  /**\n   * @module fx\n   */\n\n  function intervalEffect(dispatch, props) {\n    var dispatchTime = makeDispatchTime(dispatch, props);\n    var everyInterval = setInterval(dispatchTime, props.every);\n    return function() {\n      everyInterval && clearInterval(everyInterval);\n    }\n  }\n\n  /**\n   * Describes an effect that provides a timestamp (using [`performance.now`](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now)) or date (using [`new Date()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#Syntax)) at a regular interval. The timestamp/date will be provided as the action `data`.\n   *\n   * @memberof module:subs\n   * @param {object} props\n   * @param {boolean} props.asDate - use a Date object instead of a timestamp\n   * @param {number} props.every - get the time repeatedly after waiting a set interval\n   * @param {*} props.action - action to call with the timestamp/date\n   * @example\n   * import { h, app } from \"hyperapp\"\n   * import { Now, Interval } from \"hyperapp-fx\"\n   *\n   * const UpdateDate = (_, date) =>\n   *   date.toLocaleString(\"uk\", {\n   *     hour: \"numeric\",\n   *     minute: \"numeric\",\n   *     second: \"numeric\"\n   *   })\n   *\n   * const InitialTime = Now({\n   *   asDate: true,\n   *   action: UpdateDate\n   * })\n   *\n   * const TimeSub = Interval({\n   *   every: 100,\n   *   asDate: true,\n   *   action: UpdateDate\n   * })\n   *\n   * app({\n   *   init: [\"\", InitialTime],\n   *   view: time => <h1>{time}</h1>,\n   *   container: document.body,\n   *   subscriptions: () => [TimeSub]\n   * })\n   */\n  function Interval(props) {\n    return [intervalEffect, props]\n  }\n\n  function animationEffect(dispatch, action) {\n    var cancelId;\n\n    function frame(timestamp) {\n      dispatch(action, timestamp);\n      cancelId = requestAnimationFrame(frame);\n    }\n\n    cancelId = requestAnimationFrame(frame);\n    return function() {\n      cancelAnimationFrame(cancelId);\n    }\n  }\n\n  /**\n   * Describes an effect that will call an action from inside a [`requestAnimationFrame`](https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame) loop, which is also where the render triggered by the action will run.\n   * A relative timestamp will be provided as the action `data`.\n   *\n   * @memberof module:subs\n   * @param {*} action - action to call inside a requestAnimationFrame loop\n   * @example\n   * import { h, app } from \"hyperapp\"\n   * import { Animation, Merge } from \"hyperapp-fx\"\n   *\n   * const UpdateTime = time => ({ time: lastTime, delta: lastDelta }) => ({\n   *   time,\n   *   delta: time && lastTime ? time - lastTime : lastDelta\n   * })\n   *\n   * const AnimationFrame = (state, time) => [\n   *   state,\n   *   Merge(UpdateTime(time)),\n   *   Merge(UpdateStateForDelta),\n   *   Merge(UpdateMoreStateForDelta),\n   *   // ...\n   * ]\n   *\n   * app({\n   *   init: {\n   *     time: 0,\n   *     delta: 0,\n   *     running: true\n   *   }\n   *   // ...\n   *   subscriptions: ({ running }) => (running ? [Animation(AnimationFrame)] : [])\n   * })\n   */\n  function Animation(action) {\n    return [animationEffect, action]\n  }\n\n  function keyboardEffect(dispatch, props) {\n    var removeListenerForEvent = makeRemoveListener.bind(\n      null,\n      document,\n      dispatch,\n      props.action\n    );\n    var removeDown = props.downs ? removeListenerForEvent(\"keydown\") : null;\n    var removeUp = props.ups ? removeListenerForEvent(\"keyup\") : null;\n    var removePress = props.presses ? removeListenerForEvent(\"keypress\") : null;\n    return function() {\n      removeDown && removeDown();\n      removeUp && removeUp();\n      removePress && removePress();\n    }\n  }\n\n  /**\n   * Describes an effect that can capture [keydown](https://developer.mozilla.org/en-US/docs/Web/Events/keydown), [keyup](https://developer.mozilla.org/en-US/docs/Web/Events/keyup), and [keypress](https://developer.mozilla.org/en-US/docs/Web/Events/keypress) events for your entire document. The [`KeyboardEvent`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent) will be provided as the action `data`.\n   *\n   * @memberof module:subs\n   * @param {object} props\n   * @param {boolean} props.downs - listen for keydown events\n   * @param {boolean} props.ups - listen for keyup events\n   * @param {boolean} props.presses - listen for keypress events\n   * @param {*} props.action - action to call when keyboard events are fired\n   * @example\n   * import { Keyboard } from \"hyperapp-fx\"\n   *\n   * const KeySub = Keyboard({\n   *   downs: true,\n   *   ups: true,\n   *   action: (_, keyEvent) => {\n   *     // keyEvent has the props of the KeyboardEvent\n   *     // action will be called for keydown and keyup\n   *   }\n   * })\n   */\n  function Keyboard(props) {\n    return [keyboardEffect, props]\n  }\n\n  function webSocketListenEffect(dispatch, props) {\n    var connection = getOpenWebSocket(props);\n    var removeListen = makeRemoveListener(\n      connection.socket,\n      dispatch,\n      props.action,\n      \"message\"\n    );\n    connection.listeners.push(removeListen);\n    var removeError;\n    if (props.error) {\n      removeError = makeRemoveListener(\n        connection.socket,\n        dispatch,\n        props.error,\n        \"error\"\n      );\n      connection.listeners.push(removeError);\n    }\n    var removeOpen;\n    if (props.open) {\n      removeOpen = makeRemoveListener(\n        connection.socket,\n        dispatch,\n        props.open,\n        \"open\"\n      );\n      connection.listeners.push(removeOpen);\n    }\n    var removeClose;\n    if (props.close) {\n      removeClose = makeRemoveListener(\n        connection.socket,\n        dispatch,\n        props.close,\n        \"close\"\n      );\n      connection.listeners.push(removeClose);\n    }\n\n    return function() {\n      removeListen && removeListen();\n      removeError && removeError();\n      removeOpen && removeOpen();\n      removeClose && removeClose();\n      connection.listeners = connection.listeners.filter(function(listener) {\n        return (\n          listener !== removeListen &&\n          listener !== removeError &&\n          listener !== removeOpen &&\n          listener !== removeClose\n        )\n      });\n      if (connection.listeners.length === 0) {\n        closeWebSocket(props);\n      }\n    }\n  }\n\n  /**\n   * Describes an effect that will open a [`WebSocket`](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/WebSocket) connection for a given URL and optional protocols. Connections will remain open until the last subscription for that URL are cancelled.\n   *\n   * @memberof module:subs\n   * @param {object} props\n   * @param {string} props.url - The URL to which to connect; this should be the URL to which the WebSocket server will respond\n   * @param {string | string[]} props.protocols - Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified `protocol`). If you don't specify a protocol string, an empty string is assumed.\n   * @param {*} props.action - action to call with new incoming messages\n   * @param {*} props.error - action to call if an error occurs\n   * @param {*} props.open - action to call when the socket is opened\n   * @param {*} props.close - action to call when the socket is closed\n   * @example\n   * import { WebSocketListen } from \"hyperapp-fx\"\n   *\n   * const WebSocketSub = WebSocketListen({\n   *   url: \"wss://example.com\",\n   *   action: ReceivedMessageAction\n   * })\n   */\n  function WebSocketListen(props) {\n    return [webSocketListenEffect, props]\n  }\n\n  function historyPopEffect(dispatch, props) {\n    return makeRemoveListener(window, dispatch, props.action, \"popstate\")\n  }\n\n  /**\n   * Describes an effect that will call an action whenever a user navigates through their browser [`history`](https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView/popstate_event). The action will receive the state at that point in the browsers history.\n   *\n   * @memberof module:subs\n   * @param {*} action - Action to call\n   * @example\n   * import { h, app } from \"hyperapp\"\n   * import { HistoryPop } from \"hyperapp-fx\"\n   *\n   * app({\n   *   init: { page: 1 },\n   *   view: state => <App page={state.page} />,\n   *   container: document.body,\n   *   subscriptions: state => [\n   *     HistoryPop({ action: (state, event) => event.state || state })\n   *   ]\n   * })\n   */\n\n  function HistoryPop(props) {\n    return [historyPopEffect, props]\n  }\n\n  function watchPositionEffect(dispatch, props) {\n    var cancelId = navigator.geolocation.watchPosition(\n      function(result) {\n        return dispatch(props.action, result)\n      },\n      function(error) {\n        return dispatch(props.error, error)\n      },\n      props.options\n    );\n\n    return function() {\n      navigator.geolocation.clearWatch(cancelId);\n    }\n  }\n\n  /**\n   * Describes an effect that can monitor geolocation using the [Geolocation API](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API), sending updates each time the location is updated\n   *\n   * @memberof module:subs\n   * @param {object} props\n   * @param {*} props.action - required action to call each time the location changes\n   * @param {*} props.error - optional action to call on error\n   * @param {object} props.options - An optional [`PositionOptions`](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions) object\n   * @example\n   * import { WatchPosition } from \"hyperapp-fx\"\n   *\n   * const GeoSub = WatchPosition({\n   *   action: (state, position) => {\n   *     state.user_location = position.coords,\n   *   }\n   * })\n   */\n  function WatchPosition(props) {\n    return [watchPositionEffect, props]\n  }\n\n  /**\n   * @module subs\n   */\n\n  exports.Animation = Animation;\n  exports.Console = Console;\n  exports.Debounce = Debounce;\n  exports.Delay = Delay;\n  exports.DeleteCookie = DeleteCookie;\n  exports.Dispatch = Dispatch;\n  exports.GetCurrentPosition = GetCurrentPosition;\n  exports.HistoryPop = HistoryPop;\n  exports.HistoryPush = HistoryPush;\n  exports.HistoryReplace = HistoryReplace;\n  exports.Http = Http;\n  exports.Interval = Interval;\n  exports.Keyboard = Keyboard;\n  exports.Merge = Merge;\n  exports.Now = Now;\n  exports.Random = Random;\n  exports.ReadCookie = ReadCookie;\n  exports.ReadFromStorage = ReadFromStorage;\n  exports.RemoveFromStorage = RemoveFromStorage;\n  exports.Throttle = Throttle;\n  exports.WatchPosition = WatchPosition;\n  exports.WebSocketListen = WebSocketListen;\n  exports.WebSocketSend = WebSocketSend;\n  exports.WriteCookie = WriteCookie;\n  exports.WriteToStorage = WriteToStorage;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=hyperappFx.js.map\n"]}